class ShapeData {
	public var tetra_vertices:Array;
	public var tetra_faces:Array;
	public var tetra_trun:Array;
	//
	public var octa_vertices:Array;
	public var octa_faces:Array;
	public var octa_trun:Array;
	//
	public var cube_vertices:Array;
	public var cube_faces:Array;
	public var cube_trun:Array;
	//
	public var icosa_vertices:Array;
	public var icosa_faces:Array;
	public var icosa_trun:Array;
	//
	public var dodeca_vertices:Array;
	public var dodeca_faces:Array;
	public var dodeca_trun:Array;
	//
	public function ShapeData() {
		var tetra_h:Number = 1/3;
		var tetra_r:Number = Math.sqrt(1-tetra_h*tetra_h);
		tetra_vertices = new Array();
		tetra_vertices[0] = new Vector(0, 0, 1);
		tetra_vertices[1] = new Vector(tetra_r, 0, -tetra_h);
		tetra_vertices[2] = new Vector(-tetra_r/2, tetra_r*Math.sqrt(3)/2, -tetra_h);
		tetra_vertices[3] = new Vector(-tetra_r/2, -tetra_r*Math.sqrt(3)/2, -tetra_h);
		tetra_faces = new Array();
		tetra_faces[0] = new Array(0, 1, 2);
		tetra_faces[1] = new Array(0, 1, 3);
		tetra_faces[2] = new Array(0, 2, 3);
		tetra_faces[3] = new Array(1, 2, 3);
		tetra_trun = new Array();
		tetra_trun.push(0.333333);
		//
		var cube_s:Number = 1/Math.sqrt(3);
		cube_vertices = new Array();
		cube_vertices[0] = new Vector(cube_s, cube_s, -cube_s);
		cube_vertices[1] = new Vector(cube_s, cube_s, cube_s);
		cube_vertices[2] = new Vector(cube_s, -cube_s, cube_s);
		cube_vertices[3] = new Vector(cube_s, -cube_s, -cube_s);
		cube_vertices[4] = new Vector(-cube_s, cube_s, -cube_s);
		cube_vertices[5] = new Vector(-cube_s, cube_s, cube_s);
		cube_vertices[6] = new Vector(-cube_s, -cube_s, cube_s);
		cube_vertices[7] = new Vector(-cube_s, -cube_s, -cube_s);
		cube_faces = new Array();
		cube_faces[0] = new Array(0, 1, 2, 3);
		cube_faces[1] = new Array(4, 5, 6, 7);
		cube_faces[2] = new Array(0, 1, 5, 4);
		cube_faces[3] = new Array(3, 2, 6, 7);
		cube_faces[4] = new Array(1, 2, 6, 5);
		cube_faces[5] = new Array(0, 3, 7, 4);
		cube_trun = new Array();
		cube_trun.push((2-Math.sqrt(2))/2);
		cube_trun.push(0.5);
		//
		octa_vertices = new Array();
		octa_vertices[0] = new Vector(0, 0, 1);
		octa_vertices[1] = new Vector(1, 0, 0);
		octa_vertices[2] = new Vector(0, 1, 0);
		octa_vertices[3] = new Vector(-1, 0, 0);
		octa_vertices[4] = new Vector(0, -1, 0);
		octa_vertices[5] = new Vector(0, 0, -1);
		octa_faces = new Array();
		octa_faces[0] = new Array(0, 1, 4);
		octa_faces[1] = new Array(0, 1, 2);
		octa_faces[2] = new Array(0, 2, 3);
		octa_faces[3] = new Array(0, 3, 4);
		octa_faces[4] = new Array(5, 1, 4);
		octa_faces[5] = new Array(5, 1, 2);
		octa_faces[6] = new Array(5, 2, 3);
		octa_faces[7] = new Array(5, 3, 4);
		octa_trun = new Array();
		octa_trun.push(0.333333);
		//
		//
		var dodeca_sf:Number = 1/(Math.sqrt(3));
		var dodeca_t:Number = (Math.sqrt(5)-1)/2;
		//golden ratio
		dodeca_vertices = new Array();
		dodeca_vertices[0] = new Vector(dodeca_sf, dodeca_sf, dodeca_sf);
		dodeca_vertices[1] = new Vector(dodeca_sf, dodeca_sf, -dodeca_sf);
		dodeca_vertices[2] = new Vector(dodeca_sf, -dodeca_sf, dodeca_sf);
		dodeca_vertices[3] = new Vector(-dodeca_sf, dodeca_sf, dodeca_sf);
		dodeca_vertices[4] = new Vector(-dodeca_sf, -dodeca_sf, dodeca_sf);
		dodeca_vertices[5] = new Vector(dodeca_sf, -dodeca_sf, -dodeca_sf);
		dodeca_vertices[6] = new Vector(-dodeca_sf, dodeca_sf, -dodeca_sf);
		dodeca_vertices[7] = new Vector(-dodeca_sf, -dodeca_sf, -dodeca_sf);
		dodeca_vertices[8] = new Vector(0, dodeca_t*dodeca_sf, dodeca_sf*1/dodeca_t);
		dodeca_vertices[9] = new Vector(0, dodeca_t*dodeca_sf, -dodeca_sf*1/dodeca_t);
		dodeca_vertices[10] = new Vector(0, -dodeca_t*dodeca_sf, dodeca_sf*1/dodeca_t);
		dodeca_vertices[11] = new Vector(0, -dodeca_t*dodeca_sf, -dodeca_sf*1/dodeca_t);
		dodeca_vertices[12] = new Vector(dodeca_sf*1/dodeca_t, 0, dodeca_t*dodeca_sf);
		dodeca_vertices[13] = new Vector(-dodeca_sf*1/dodeca_t, 0, dodeca_t*dodeca_sf);
		dodeca_vertices[14] = new Vector(dodeca_sf*1/dodeca_t, 0, -dodeca_t*dodeca_sf);
		dodeca_vertices[15] = new Vector(-dodeca_sf*1/dodeca_t, 0, -dodeca_t*dodeca_sf);
		dodeca_vertices[16] = new Vector(dodeca_t*dodeca_sf, dodeca_sf*1/dodeca_t, 0);
		dodeca_vertices[17] = new Vector(dodeca_t*dodeca_sf, -dodeca_sf*1/dodeca_t, 0);
		dodeca_vertices[18] = new Vector(-dodeca_t*dodeca_sf, dodeca_sf*1/dodeca_t, 0);
		dodeca_vertices[19] = new Vector(-dodeca_t*dodeca_sf, -dodeca_sf*1/dodeca_t, 0);
		dodeca_faces = new Array();
		dodeca_faces[0] = new Array(9, 11, 5, 14, 1);
		dodeca_faces[1] = new Array(9, 11, 7, 15, 6);
		dodeca_faces[2] = new Array(8, 10, 4, 13, 3);
		dodeca_faces[3] = new Array(8, 10, 2, 12, 0);
		dodeca_faces[4] = new Array(11, 7, 19, 17, 5);
		dodeca_faces[5] = new Array(9, 6, 18, 16, 1);
		dodeca_faces[6] = new Array(8, 3, 18, 16, 0);
		dodeca_faces[7] = new Array(10, 4, 19, 17, 2);
		dodeca_faces[8] = new Array(7, 19, 4, 13, 15);
		dodeca_faces[9] = new Array(1, 16, 0, 12, 14);
		dodeca_faces[10] = new Array(6, 15, 13, 3, 18);
		dodeca_faces[11] = new Array(5, 17, 2, 12, 14);
		var dodeca_alpha:Number = 1-Math.cos(Math.PI*108/180);
		var dodeca_t:Number = (4-Math.sqrt(8*dodeca_alpha))/(8-4*dodeca_alpha);
		dodeca_trun = new Array();
		dodeca_trun.push(dodeca_t, 0.5);
		//
		var icosa_t = (Math.sqrt(5)-1)/2;
		var icosa_sf = 1/0.79465447229176625407;
		var icosa_a = 0.417774579468393*icosa_sf;
		var icosa_b = 0.675973469215555*icosa_sf;
		icosa_vertices = new Array();
		icosa_vertices[0] = new Vector(icosa_a, 0, -icosa_b);
		icosa_vertices[1] = new Vector(-icosa_a, 0, -icosa_b);
		icosa_vertices[2] = new Vector(-icosa_a, 0, icosa_b);
		icosa_vertices[3] = new Vector(icosa_a, 0, icosa_b);
		icosa_vertices[4] = new Vector(0, -icosa_b, -icosa_a);
		icosa_vertices[5] = new Vector(0, icosa_b, -icosa_a);
		icosa_vertices[6] = new Vector(0, icosa_b, icosa_a);
		icosa_vertices[7] = new Vector(0, -icosa_b, icosa_a);
		icosa_vertices[8] = new Vector(-icosa_b, -icosa_a, 0);
		icosa_vertices[9] = new Vector(icosa_b, icosa_a, 0);
		icosa_vertices[10] = new Vector(-icosa_b, icosa_a, 0);
		icosa_vertices[11] = new Vector(icosa_b, -icosa_a, 0);
		icosa_faces = new Array();
		icosa_faces[0] = new Array(3, 6, 9);
		icosa_faces[1] = new Array(0, 5, 9);
		icosa_faces[2] = new Array(3, 7, 11);
		icosa_faces[3] = new Array(2, 6, 10);
		icosa_faces[4] = new Array(2, 7, 8);
		icosa_faces[5] = new Array(0, 4, 11);
		icosa_faces[6] = new Array(1, 5, 10);
		icosa_faces[7] = new Array(1, 4, 8);
		icosa_faces[8] = new Array(2, 3, 6);
		icosa_faces[9] = new Array(0, 1, 5);
		icosa_faces[10] = new Array(2, 3, 7);
		icosa_faces[11] = new Array(0, 1, 4);
		icosa_faces[12] = new Array(3, 9, 11);
		icosa_faces[13] = new Array(2, 8, 10);
		icosa_faces[14] = new Array(0, 9, 11);
		icosa_faces[15] = new Array(1, 8, 10);
		icosa_faces[16] = new Array(5, 6, 9);
		icosa_faces[17] = new Array(4, 7, 11);
		icosa_faces[18] = new Array(5, 6, 10);
		icosa_faces[19] = new Array(4, 7, 8);
		icosa_trun = new Array();
		icosa_trun.push(0.333333);
	}
}
